{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBasic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "382:2673:13:-:0;;;1572:26:0;;;-1:-1:-1;;165:28:1;;;;;382:2673:13;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600436106200006a5760003560e01c80630a9254e4146200006f5780633a768463146200007b578063ba414fa614620000af578063f4781f8314620000ca578063f8ccbf4714620000d4578063fa7626d414620000e8575b600080fd5b62000079620000f6565b005b620000926000805160206200378c83398151915281565b6040516001600160a01b0390911681526020015b60405180910390f35b620000b962000413565b6040519015158152602001620000a6565b620000796200053e565b600054620000b99062010000900460ff1681565b600054620000b99060ff1681565b6200011e60405180604001604052806005815260200164416c69636560d81b8152506200093d565b600c55600b80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152622137b160e91b602082015262000166906200093d565b600e55600d80546001600160a01b0319166001600160a01b0392909216919091179055604051620001979062000c8c565b604051809103906000f080158015620001b4573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169182179055604080516318caf8e360e31b8152600481019290925260248201526005604482015264185cdcd95d60da1b60648201526000805160206200378c8339815191529063c657c71890608401600060405180830381600087803b1580156200023957600080fd5b505af11580156200024e573d6000803e3d6000fd5b50505050604051620002609062000c8c565b604051809103906000f0801580156200027d573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03929092169182179055604080516318caf8e360e31b81526004810192909252602482015260066044820152651c995dd85c9960d21b60648201526000805160206200378c8339815191529063c657c71890608401600060405180830381600087803b1580156200030357600080fd5b505af115801562000318573d6000803e3d6000fd5b50506008546009546040516001600160a01b039283169450911691506200033f9062000c9a565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562000373573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169182179055604080516318caf8e360e31b8152600481019290925260248201526005604482015264676175676560d81b60648201526000805160206200378c8339815191529063c657c71890608401600060405180830381600087803b158015620003f857600080fd5b505af11580156200040d573d6000803e3d6000fd5b50505050565b60008054610100900460ff1615620004345750600054610100900460ff1690565b60006000805160206200378c8339815191523b156200053957604080516000805160206200378c833981519152602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091620004bb917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000cd7565b60408051601f1981840301815290829052620004d79162000d0a565b6000604051808303816000865af19150503d806000811462000516576040519150601f19603f3d011682016040523d82523d6000602084013e6200051b565b606091505b509150508080602001905181019062000535919062000d28565b9150505b919050565b600854600b546040516340c10f1960e01b81526001600160a01b0391821660048201526804563918244f40000060248201529116906340c10f1990604401600060405180830381600087803b1580156200059757600080fd5b505af1158015620005ac573d6000803e3d6000fd5b5050600b5460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200378c833981519152925063ca669fa79150602401600060405180830381600087803b1580156200060557600080fd5b505af11580156200061a573d6000803e3d6000fd5b5050600854600a5460405163095ea7b360e01b81526001600160a01b0391821660048201526804563918244f40000060248201529116925063095ea7b391506044016020604051808303816000875af11580156200067c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006a2919062000d28565b50600b5460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206200378c8339815191529063ca669fa790602401600060405180830381600087803b158015620006f857600080fd5b505af11580156200070d573d6000803e3d6000fd5b5050600a54600b54604051636e553f6560e01b81526804563918244f40000060048201526001600160a01b03918216602482015291169250636e553f6591506044016020604051808303816000875af11580156200076f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000795919062000d53565b506040516372eb5f8160e11b8152606d60048201526000805160206200378c8339815191529063e5d6bf0290602401600060405180830381600087803b158015620007df57600080fd5b505af1158015620007f4573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b031663e3161ddd6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156200084e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000874919062000d53565b50600a54600b54604051637d9e771360e11b81526001600160a01b039182166004820152620008ff92919091169063fb3cee26906024015b602060405180830381865afa158015620008ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008f0919062000d53565b678ac7230489e8000062000a54565b600a54600b54604051637a0787a960e11b81526001600160a01b0391821660048201526200093b92919091169063f40f0f5290602401620008ac565b565b6000808260405160200162000953919062000d0a565b60408051808303601f190181529082905280516020909101206001625e79b760e01b031982526004820181905291506000805160206200378c8339815191529063ffa18649906024016020604051808303816000875af1158015620009bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009e2919062000d6d565b6040516318caf8e360e31b81529092506000805160206200378c8339815191529063c657c7189062000a1b908590879060040162000d98565b600060405180830381600087803b15801562000a3657600080fd5b505af115801562000a4b573d6000803e3d6000fd5b50505050915091565b80821462000b7f577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000ac79060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162000b7f62000b83565b5050565b6000805160206200378c8339815191523b1562000c7b57604080516000805160206200378c833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000c16929160200162000cd7565b60408051601f198184030181529082905262000c329162000d0a565b6000604051808303816000865af19150503d806000811462000c71576040519150601f19603f3d011682016040523d82523d6000602084013e62000c76565b606091505b505050505b6000805461ff001916610100179055565b610e178062000ddd83390190565b611b988062001bf483390190565b60005b8381101562000cc557818101518382015260200162000cab565b838111156200040d5750506000910152565b6001600160e01b031983168152815160009062000cfc81600485016020870162000ca8565b919091016004019392505050565b6000825162000d1e81846020870162000ca8565b9190910192915050565b60006020828403121562000d3b57600080fd5b8151801515811462000d4c57600080fd5b9392505050565b60006020828403121562000d6657600080fd5b5051919050565b60006020828403121562000d8057600080fd5b81516001600160a01b038116811462000d4c57600080fd5b60018060a01b0383168152604060208201526000825180604084015262000dc781606085016020870162000ca8565b601f01601f191691909101606001939250505056fe60e06040523480156200001157600080fd5b50604080516020808201808452600080845284519283019094528382528251929391926012926200004492909162000119565b5081516200005a90600190602085019062000119565b5060ff81166080524660a052620000706200007d565b60c05250620002a0915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000b19190620001fc565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8280546200012790620001bf565b90600052602060002090601f0160209004810192826200014b576000855562000196565b82601f106200016657805160ff191683800117855562000196565b8280016001018555821562000196579182015b828111156200019657825182559160200191906001019062000179565b50620001a4929150620001a8565b5090565b5b80821115620001a45760008155600101620001a9565b600181811c90821680620001d457607f821691505b60208210811415620001f657634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200021957607f831692505b60208084108214156200023a57634e487b7160e01b86526022600452602486fd5b818015620002515760018114620002635762000292565b60ff1986168952848901965062000292565b60008a81526020902060005b868110156200028a5781548b8201529085019083016200026f565b505084890196505b509498975050505050505050565b60805160a05160c051610b47620002d060003960006104530152600061041e015260006101440152610b476000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b41146101d5578063a9059cbb146101dd578063d505accf146101f0578063dd62ed3e1461020357600080fd5b806340c10f191461018057806370a08231146101955780637ecebe00146101b557600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd1461012c578063313ce5671461013f5780633644e51514610178575b600080fd5b6100dc61022e565b6040516100e99190610856565b60405180910390f35b6101056101003660046108c7565b6102bc565b60405190151581526020016100e9565b61011e60025481565b6040519081526020016100e9565b61010561013a3660046108f1565b610328565b6101667f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b61011e61041a565b61019361018e3660046108c7565b610475565b005b61011e6101a336600461092d565b60036020526000908152604090205481565b61011e6101c336600461092d565b60056020526000908152604090205481565b6100dc610483565b6101056101eb3660046108c7565b610490565b6101936101fe36600461094f565b610508565b61011e6102113660046109c2565b600460209081526000928352604080842090915290825290205481565b6000805461023b906109f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610267906109f5565b80156102b45780601f10610289576101008083540402835291602001916102b4565b820191906000526020600020905b81548152906001019060200180831161029757829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103179086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103845761035f8382610a46565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103ac908490610a46565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104079087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104505761044b610751565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61047f82826107eb565b5050565b6001805461023b906109f5565b336000908152600360205260408120805483919083906104b1908490610a46565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103179086815260200190565b4284101561055d5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b6000600161056961041a565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610675573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106ab5750876001600160a01b0316816001600160a01b0316145b6106e85760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610554565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516107839190610a5d565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546107fd9190610af9565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561088357858101830151858201604001528201610867565b81811115610895576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146108c257600080fd5b919050565b600080604083850312156108da57600080fd5b6108e3836108ab565b946020939093013593505050565b60008060006060848603121561090657600080fd5b61090f846108ab565b925061091d602085016108ab565b9150604084013590509250925092565b60006020828403121561093f57600080fd5b610948826108ab565b9392505050565b600080600080600080600060e0888a03121561096a57600080fd5b610973886108ab565b9650610981602089016108ab565b95506040880135945060608801359350608088013560ff811681146109a557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156109d557600080fd5b6109de836108ab565b91506109ec602084016108ab565b90509250929050565b600181811c90821680610a0957607f821691505b60208210811415610a2a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a5857610a58610a30565b500390565b600080835481600182811c915080831680610a7957607f831692505b6020808410821415610a9957634e487b7160e01b86526022600452602486fd5b818015610aad5760018114610abe57610aeb565b60ff19861689528489019650610aeb565b60008a81526020902060005b86811015610ae35781548b820152908501908301610aca565b505084890196505b509498975050505050505050565b60008219821115610b0c57610b0c610a30565b50019056fea26469706673582212205dd9b2b42d9aaef978db07748430c544b75fa7c7ec8be1955259c0e432c2452a64736f6c634300080a0033610100604052426009553480156200001657600080fd5b5060405162001b9838038062001b988339810160408190526200003991620002c2565b8181670de0b6b3a76400008260405180602001604052806000815250604051806020016040528060008152508181846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cc9190620002fa565b8251620000e1906000906020860190620001ff565b508151620000f7906001906020850190620001ff565b5060ff81166080524660a0526200010d62000163565b60c0525050506001600160a01b0392831660e052505083811690831614156200013557600080fd5b600680546001600160a01b0319166001600160a01b0393909316929092179091556008555062000407915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405162000197919062000363565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8280546200020d9062000326565b90600052602060002090601f0160209004810192826200023157600085556200027c565b82601f106200024c57805160ff19168380011785556200027c565b828001600101855582156200027c579182015b828111156200027c5782518255916020019190600101906200025f565b506200028a9291506200028e565b5090565b5b808211156200028a57600081556001016200028f565b80516001600160a01b0381168114620002bd57600080fd5b919050565b60008060408385031215620002d657600080fd5b620002e183620002a5565b9150620002f160208401620002a5565b90509250929050565b6000602082840312156200030d57600080fd5b815160ff811681146200031f57600080fd5b9392505050565b600181811c908216806200033b57607f821691505b602082108114156200035d57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200038057607f831692505b6020808410821415620003a157634e487b7160e01b86526022600452602486fd5b818015620003b85760018114620003ca57620003f9565b60ff19861689528489019650620003f9565b60008a81526020902060005b86811015620003f15781548b820152908501908301620003d6565b505084890196505b509498975050505050505050565b60805160a05160c05160e051611734620004646000396000818161030e015281816107a901528181610a5c01528181610d4501528181610f4c0152611251015260006106e1015260006106ac015260006102cd01526117346000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80639231cf7411610125578063ce96cb77116100ad578063e3161ddd1161007c578063e3161ddd14610487578063eacdaabc1461048f578063ef8b30f71461024d578063f40f0f5214610498578063fb3cee26146104ab57600080fd5b8063ce96cb771461041e578063d505accf14610447578063d905777e1461041e578063dd62ed3e1461045c57600080fd5b8063b3d7f6b9116100f4578063b3d7f6b91461024d578063b460af94146103f8578063ba0876521461040b578063c63d75b614610330578063c6e6f5921461024d57600080fd5b80639231cf74146103c157806394bf804d146103ca57806395d89b41146103dd578063a9059cbb146103e557600080fd5b80633644e515116101a85780634cdad506116101775780634cdad5061461024d5780636e553f651461036557806370a08231146103785780637cbaccd5146103985780637ecebe00146103a157600080fd5b80633644e5151461030157806338d52e0f14610309578063402d267d146103305780634bb2be741461034557600080fd5b80630a28a477116101ef5780630a28a4771461024d57806318160ddd14610281578063228cb7331461028a57806323b872dd146102b5578063313ce567146102c857600080fd5b806301e1d1141461022157806306fdde031461023857806307a2d13a1461024d578063095ea7b31461025e575b600080fd5b6002545b6040519081526020015b60405180910390f35b6102406104cb565b60405161022f9190611358565b61022561025b3660046113ad565b90565b61027161026c3660046113e2565b610559565b604051901515815260200161022f565b61022560025481565b60065461029d906001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b6102716102c336600461140c565b6105c6565b6102ef7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161022f565b6102256106a8565b61029d7f000000000000000000000000000000000000000000000000000000000000000081565b61022561033e366004611448565b5060001990565b610225610353366004611448565b600a6020526000908152604090205481565b610225610373366004611463565b610703565b610225610386366004611448565b60036020526000908152604090205481565b61022560075481565b6102256103af366004611448565b60056020526000908152604090205481565b61022560095481565b6102256103d8366004611463565b6107a3565b61024061082f565b6102716103f33660046113e2565b61083c565b61022561040636600461148f565b6108a2565b61022561041936600461148f565b610948565b61022561042c366004611448565b6001600160a01b031660009081526003602052604090205490565b61045a6104553660046114cb565b610a83565b005b61022561046a36600461153e565b600460209081526000928352604080842090915290825290205481565b610225610cc7565b61022560085481565b6102256104a6366004611448565b610d27565b6102256104b9366004611448565b600b6020526000908152604090205481565b600080546104d890611568565b80601f016020809104026020016040519081016040528092919081815260200182805461050490611568565b80156105515780601f1061052657610100808354040283529160200191610551565b820191906000526020600020905b81548152906001019060200180831161053457829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105b49086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610622576105fd83826115b9565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061064a9084906115b9565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206116df833981519152906106939087815260200190565b60405180910390a360019150505b9392505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146106de576106d9610e69565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b60008061070e610cc7565b3360009081526003602052604090205490915061072b8585610f03565b9250801561076b57336000908152600a6020526040812054610753838564e8d4a51000610fc1565b61075d91906115b9565b90506107693382610fe0565b505b61077d8582018364e8d4a51000610fc1565b336000818152600a602052604090209190915561079b908587611011565b505092915050565b816107d97f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633308461109c565b6107e38284611126565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d791015b60405180910390a36105c0565b600180546104d890611568565b3360009081526003602052604081208054839190839061085d9084906115b9565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206116df833981519152906105b49086815260200190565b6000806108ad610cc7565b6001600160a01b038416600090815260036020908152604080832054600a909252822054929350916108e5838564e8d4a51000610fc1565b6108ef91906115b9565b90506109038483038464e8d4a51000610fc1565b6001600160a01b0386166000908152600a60205260409020556109268582610fe0565b610931878787611180565b935061093e338789611011565b5050509392505050565b6000336001600160a01b038316146109b8576001600160a01b038216600090815260046020908152604080832033845290915290205460001981146109b65761099185826115b9565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b5082806109fa5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b60448201526064015b60405180910390fd5b610a048285611278565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106a16001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684836112da565b42841015610ad35760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064016109f1565b60006001610adf6106a8565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610beb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610c215750876001600160a01b0316816001600160a01b0316145b610c5e5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016109f1565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60006009544211610cd9575060075490565b60025480610ced5750504260095560075490565b8064e8d4a51000600854610d0191906115d0565b610d0b91906115ef565b600754610d189190611611565b60078190554260095592915050565b6007546040516370a0823160e01b81523060048201526000919082907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db89190611629565b905060095443118015610dca57508015155b15610e1657600060085460095442610de291906115b9565b610dec91906115d0565b905081610dfe64e8d4a51000836115d0565b610e0891906115ef565b610e129084611611565b9250505b6001600160a01b0384166000908152600a602090815260408083205460039092529091205464e8d4a5100090610e4d9085906115d0565b610e5791906115ef565b610e6191906115b9565b949350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610e9b9190611642565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8180610f3f5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b60448201526064016109f1565b610f746001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308661109c565b610f7e8282611126565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d79101610822565b828202811515841585830485141716610fd957600080fd5b0492915050565b6001600160a01b0382166000908152600b602052604081208054839290611008908490611611565b90915550505050565b816001600160a01b0316836001600160a01b031614611097576001600160a01b0383166000908152600a6020908152604080832054600390925282205490919061105e9084908490610fc1565b905061106a81836115b9565b6001600160a01b038087166000908152600a60205260408082209390935590861681522080549091019055505b505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061111f5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016109f1565b5050505050565b80600260008282546111389190611611565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206116df83398151915291015b60405180910390a35050565b826001600160a01b03821633146111ef576001600160a01b038216600090815260046020908152604080832033845290915290205460001981146111ed576111c882826115b9565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b6111f98282611278565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106a16001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684866112da565b6001600160a01b038216600090815260036020526040812080548392906112a09084906115b9565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206116df83398151915290602001611174565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806113525760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016109f1565b50505050565b600060208083528351808285015260005b8181101561138557858101830151858201604001528201611369565b81811115611397576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156113bf57600080fd5b5035919050565b80356001600160a01b03811681146113dd57600080fd5b919050565b600080604083850312156113f557600080fd5b6113fe836113c6565b946020939093013593505050565b60008060006060848603121561142157600080fd5b61142a846113c6565b9250611438602085016113c6565b9150604084013590509250925092565b60006020828403121561145a57600080fd5b6106a1826113c6565b6000806040838503121561147657600080fd5b82359150611486602084016113c6565b90509250929050565b6000806000606084860312156114a457600080fd5b833592506114b4602085016113c6565b91506114c2604085016113c6565b90509250925092565b600080600080600080600060e0888a0312156114e657600080fd5b6114ef886113c6565b96506114fd602089016113c6565b95506040880135945060608801359350608088013560ff8116811461152157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561155157600080fd5b61155a836113c6565b9150611486602084016113c6565b600181811c9082168061157c57607f821691505b6020821081141561159d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115cb576115cb6115a3565b500390565b60008160001904831182151516156115ea576115ea6115a3565b500290565b60008261160c57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611624576116246115a3565b500190565b60006020828403121561163b57600080fd5b5051919050565b600080835481600182811c91508083168061165e57607f831692505b602080841082141561167e57634e487b7160e01b86526022600452602486fd5b81801561169257600181146116a3576116d0565b60ff198616895284890196506116d0565b60008a81526020902060005b868110156116c85781548b8201529085019083016116af565b505084890196505b50949897505050505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212201627dbae9a1e7e5b03923643fdd55c61a3eccfa51c32101db70aad5ca2aa9b9664736f6c634300080a00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220324dae301dfbb94a910bf512464a7a5ae0f926f43344fc19cf6a5811d6216f7e64736f6c634300080a0033",
    "sourceMap": "382:2673:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:410;;;:::i;:::-;;316:38:1;;-1:-1:-1;;;;;;;;;;;316:38:1;;;;;-1:-1:-1;;;;;189:32:15;;;171:51;;159:2;144:18;316:38:1;;;;;;;;1819:584:0;;;:::i;:::-;;;398:14:15;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:15;988:417:13;;;:::i;165:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;572:410:13;626:23;;;;;;;;;;;;;;-1:-1:-1;;;626:23:13;;;:14;:23::i;:::-;614:8;606:43;607:5;606:43;;-1:-1:-1;;;;;;606:43:13;-1:-1:-1;;;;;606:43:13;;;;;;;;;;675:21;;;;;;;;;;;;-1:-1:-1;;;675:21:13;;;;;;:14;:21::i;:::-;665:6;659:37;660:3;659:37;;-1:-1:-1;;;;;;659:37:13;-1:-1:-1;;;;;659:37:13;;;;;;;;;;715:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;707:5:13;:23;;-1:-1:-1;;;;;;707:23:13;-1:-1:-1;;;;;707:23:13;;;;;;;;;740:33;;;-1:-1:-1;;;740:33:13;;;;;637:51:15;;;;704:18;;;697:30;763:1;743:18;;;736:29;-1:-1:-1;;;781:18:15;;;774:35;-1:-1:-1;;;;;;;;;;;245:64:1;740:8:13;;826:19:15;;740:33:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;793:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;784:6:13;:24;;-1:-1:-1;;;;;;784:24:13;-1:-1:-1;;;;;784:24:13;;;;;;;;;818:35;;;-1:-1:-1;;;818:35:13;;;;;1068:51:15;;;;1135:18;;;1128:30;1194:1;1174:18;;;1167:29;-1:-1:-1;;;1212:18:15;;;1205:36;-1:-1:-1;;;;;;;;;;;245:64:1;818:8:13;;1258:19:15;;818:35:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;900:5:13;;923:6;;872:60;;-1:-1:-1;;;;;900:5:13;;;;-1:-1:-1;923:6:13;;;-1:-1:-1;872:60:13;;;:::i;:::-;-1:-1:-1;;;;;1548:15:15;;;1530:34;;1600:15;;1595:2;1580:18;;1573:43;1480:2;1465:18;872:60:13;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;864:5:13;:68;;-1:-1:-1;;;;;;864:68:13;-1:-1:-1;;;;;864:68:13;;;;;;;;;942:33;;;-1:-1:-1;;;942:33:13;;;;;1839:51:15;;;;1906:18;;;1899:30;1965:1;1945:18;;;1938:29;-1:-1:-1;;;1983:18:15;;;1976:35;-1:-1:-1;;;;;;;;;;;245:64:1;942:8:13;;2028:19:15;;942:33:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:410::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:0;;;2232:51:15;;;-1:-1:-1;;;2299:18:15;;;2292:34;2196:43:0;;;;;;;;;2205:18:15;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;988:417:13:-;1081:5;;1092;;1081:27;;-1:-1:-1;;;1081:27:13;;-1:-1:-1;;;;;1092:5:13;;;1081:27;;;2232:51:15;1099:8:13;2299:18:15;;;2292:34;1081:5:13;;;:10;;2205:18:15;;1081:27:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1128:5:13;;1119:15;;-1:-1:-1;;;1119:15:13;;-1:-1:-1;;;;;1128:5:13;;;1119:15;;;171:51:15;-1:-1:-1;;;;;;;;;;;245:64:1;-1:-1:-1;1119:8:13;;-1:-1:-1;144:18:15;;1119:15:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1136:5:13;;1158;;1136:39;;-1:-1:-1;;;1136:39:13;;-1:-1:-1;;;;;1158:5:13;;;1136:39;;;2232:51:15;1166:8:13;2299:18:15;;;2292:34;1136:5:13;;;-1:-1:-1;1136:13:13;;-1:-1:-1;2205:18:15;;1136:39:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1194:5:13;;1185:15;;-1:-1:-1;;;1185:15:13;;-1:-1:-1;;;;;1194:5:13;;;1185:15;;;171:51:15;-1:-1:-1;;;;;;;;;;;245:64:1;1185:8:13;;144:18:15;;1185:15:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1202:5:13;;1226;;1202:30;;-1:-1:-1;;;1202:30:13;;1216:8;1202:30;;;4252:25:15;-1:-1:-1;;;;;1226:5:13;;;4293:18:15;;;4286:60;1202:5:13;;;-1:-1:-1;1202:13:13;;-1:-1:-1;4225:18:15;;1202:30:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1243:12:13;;-1:-1:-1;;;1243:12:13;;1251:3;1243:12;;;4702:25:15;-1:-1:-1;;;;;;;;;;;245:64:1;1243:7:13;;4675:18:15;;1243:12:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1257:5;;;;;;;;;-1:-1:-1;;;;;1257:5:13;-1:-1:-1;;;;;1257:16:13;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1303:5:13;;1325;;1303:28;;-1:-1:-1;;;1303:28:13;;-1:-1:-1;;;;;1325:5:13;;;1303:28;;;171:51:15;1294:48:13;;1303:5;;;;;:21;;144:18:15;;1303:28:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1333:8;1294;:48::i;:::-;1361:5;;1381;;1361:26;;-1:-1:-1;;;1361:26:13;;-1:-1:-1;;;;;1381:5:13;;;1361:26;;;171:51:15;1352:46:13;;1361:5;;;;;:19;;144:18:15;;1361:26:13;14:214:15;1352:46:13;988:417::o;2776:233:2:-;2837:12;2851:18;2929:4;2912:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;2912:22:2;;;;;;;2902:33;;2912:22;2902:33;;;;-1:-1:-1;;;;;;2953:19:2;;;;;4702:25:15;;;2902:33:2;-1:-1:-1;;;;;;;;;;;;245:64:1;2953:7:2;;4675:18:15;;2953:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2982:20;;-1:-1:-1;;;2982:20:2;;2946:26;;-1:-1:-1;;;;;;;;;;;;245:64:1;2982:8:2;;:20;;2946:26;;2997:4;;2982:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2776:233;;;:::o;5202:262:0:-;5264:1;5259;:6;5255:203;;5286:41;;;;;6183:2:15;6165:21;;;6222:2;6202:18;;;6195:30;6261:34;6256:2;6241:18;;6234:62;-1:-1:-1;;;6327:2:15;6312:18;;6305:32;6369:3;6354:19;;5981:398;5286:41:0;;;;;;;;5346:31;;;6596:21:15;;;6653:2;6633:18;;;6626:30;-1:-1:-1;;;6687:2:15;6672:18;;6665:40;6772:4;6757:20;;6750:36;;;5346:31:0;;;;;;;6737:3:15;5346:31:0;;;5396;;;7009:21:15;;;7066:2;7046:18;;;7039:30;-1:-1:-1;;;7100:2:15;7085:18;;7078:40;7185:4;7170:20;;7163:36;;;5396:31:0;;;;;;;7150:3:15;5396:31:0;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:0;;;7412:51:15;;;-1:-1:-1;;;7479:18:15;;;7472:34;;;;2705:4:0;7522:18:15;;;7515:34;2482:11:0;;1671:64;2579:43;;7385:18:15;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;2337:258:15:-;2409:1;2419:113;2433:6;2430:1;2427:13;2419:113;;;2509:11;;;2503:18;2490:11;;;2483:39;2455:2;2448:10;2419:113;;;2550:6;2547:1;2544:13;2541:48;;;-1:-1:-1;;2585:1:15;2567:16;;2560:27;2337:258::o;2600:371::-;-1:-1:-1;;;;;;2785:33:15;;2773:46;;2842:13;;2755:3;;2864:61;2842:13;2914:1;2905:11;;2898:4;2886:17;;2864:61;:::i;:::-;2945:16;;;;2963:1;2941:24;;2600:371;-1:-1:-1;;;2600:371:15:o;2976:274::-;3105:3;3143:6;3137:13;3159:53;3205:6;3200:3;3193:4;3185:6;3181:17;3159:53;:::i;:::-;3228:16;;;;;2976:274;-1:-1:-1;;2976:274:15:o;3255:277::-;3322:6;3375:2;3363:9;3354:7;3350:23;3346:32;3343:52;;;3391:1;3388;3381:12;3343:52;3423:9;3417:16;3476:5;3469:13;3462:21;3455:5;3452:32;3442:60;;3498:1;3495;3488:12;3442:60;3521:5;3255:277;-1:-1:-1;;;3255:277:15:o;4357:184::-;4427:6;4480:2;4468:9;4459:7;4455:23;4451:32;4448:52;;;4496:1;4493;4486:12;4448:52;-1:-1:-1;4519:16:15;;4357:184;-1:-1:-1;4357:184:15:o;5201:290::-;5271:6;5324:2;5312:9;5303:7;5299:23;5295:32;5292:52;;;5340:1;5337;5330:12;5292:52;5366:16;;-1:-1:-1;;;;;5411:31:15;;5401:42;;5391:70;;5457:1;5454;5447:12;5496:480;5702:1;5698;5693:3;5689:11;5685:19;5677:6;5673:32;5662:9;5655:51;5742:2;5737;5726:9;5722:18;5715:30;5636:4;5774:6;5768:13;5817:6;5812:2;5801:9;5797:18;5790:34;5833:66;5892:6;5887:2;5876:9;5872:18;5867:2;5859:6;5855:15;5833:66;:::i;:::-;5960:2;5939:15;-1:-1:-1;;5935:29:15;5920:45;;;;5967:2;5916:54;;5496:480;-1:-1:-1;;;5496:480:15:o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/mnt/c/Users/0xClandestine/Desktop/unsolidly/src/test/ERC4626Gauge.t.sol",
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC20": [
        22460
      ],
      "ERC4626": [
        22072
      ],
      "ERC4626Gauge": [
        23157
      ],
      "ERC4626GaugeTest": [
        23369
      ],
      "FixedPointMathLib": [
        22579
      ],
      "MockERC20": [
        23181
      ],
      "MockGauge": [
        23199
      ],
      "SafeTransferLib": [
        22664
      ],
      "Script": [
        2022
      ],
      "StdStorage": [
        3553
      ],
      "Test": [
        3455
      ],
      "Vm": [
        5423
      ],
      "console": [
        13487
      ],
      "console2": [
        21551
      ],
      "stdError": [
        3525
      ],
      "stdMath": [
        4794
      ],
      "stdStorage": [
        4655
      ]
    },
    "id": 23370,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23160,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:13"
      },
      {
        "absolutePath": "/mnt/c/Users/0xClandestine/Desktop/unsolidly/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "id": 23161,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23370,
        "sourceUnit": 4795,
        "src": "64:28:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/mnt/c/Users/0xClandestine/Desktop/unsolidly/src/ERC4626Gauge.sol",
        "file": "../ERC4626Gauge.sol",
        "id": 23162,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23370,
        "sourceUnit": 23158,
        "src": "93:29:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "",
                "id": 23164,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "152:2:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                  "typeString": "literal_string \"\""
                },
                "value": ""
              },
              {
                "hexValue": "",
                "id": 23165,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "156:2:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                  "typeString": "literal_string \"\""
                },
                "value": ""
              },
              {
                "hexValue": "3138",
                "id": 23166,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "160:2:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              }
            ],
            "baseName": {
              "id": 23163,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22460,
              "src": "146:5:13"
            },
            "id": 23167,
            "nodeType": "InheritanceSpecifier",
            "src": "146:17:13"
          }
        ],
        "canonicalName": "MockERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23181,
        "linearizedBaseContracts": [
          23181,
          22460
        ],
        "name": "MockERC20",
        "nameLocation": "133:9:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23179,
              "nodeType": "Block",
              "src": "220:35:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23175,
                        "name": "who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23169,
                        "src": "236:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23176,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23171,
                        "src": "241:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23174,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22431,
                      "src": "230:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "230:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23178,
                  "nodeType": "ExpressionStatement",
                  "src": "230:18:13"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 23180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "179:4:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23169,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "192:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 23180,
                  "src": "184:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23171,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "205:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 23180,
                  "src": "197:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "197:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "183:29:13"
            },
            "returnParameters": {
              "id": 23173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:0:13"
            },
            "scope": 23181,
            "src": "170:85:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 23370,
        "src": "124:133:13",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23182,
              "name": "ERC4626Gauge",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23157,
              "src": "281:12:13"
            },
            "id": 23183,
            "nodeType": "InheritanceSpecifier",
            "src": "281:12:13"
          }
        ],
        "canonicalName": "MockGauge",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23199,
        "linearizedBaseContracts": [
          23199,
          23157,
          22072,
          22460
        ],
        "name": "MockGauge",
        "nameLocation": "268:9:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23197,
              "nodeType": "Block",
              "src": "376:2:13",
              "statements": []
            },
            "id": 23198,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 23192,
                    "name": "asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23186,
                    "src": "352:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22460",
                      "typeString": "contract ERC20"
                    }
                  },
                  {
                    "id": 23193,
                    "name": "reward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23189,
                    "src": "359:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22460",
                      "typeString": "contract ERC20"
                    }
                  },
                  {
                    "hexValue": "31",
                    "id": 23194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "367:7:13",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  }
                ],
                "id": 23195,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 23191,
                  "name": "ERC4626Gauge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23157,
                  "src": "339:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "339:36:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23186,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "318:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 23198,
                  "src": "312:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$22460",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 23185,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23184,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22460,
                      "src": "312:5:13"
                    },
                    "referencedDeclaration": 22460,
                    "src": "312:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22460",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23189,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "331:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 23198,
                  "src": "325:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$22460",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 23188,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23187,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22460,
                      "src": "325:5:13"
                    },
                    "referencedDeclaration": 22460,
                    "src": "325:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22460",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "311:27:13"
            },
            "returnParameters": {
              "id": 23196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:13"
            },
            "scope": 23199,
            "src": "300:78:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 23370,
        "src": "259:121:13",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23200,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3455,
              "src": "411:4:13"
            },
            "id": 23201,
            "nodeType": "InheritanceSpecifier",
            "src": "411:4:13"
          }
        ],
        "canonicalName": "ERC4626GaugeTest",
        "contractDependencies": [
          23181,
          23199
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23369,
        "linearizedBaseContracts": [
          23369,
          3455,
          2022,
          1786
        ],
        "name": "ERC4626GaugeTest",
        "nameLocation": "391:16:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23204,
            "mutability": "mutable",
            "name": "asset",
            "nameLocation": "437:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "427:15:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$23181",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 23203,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23202,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23181,
                "src": "427:9:13"
              },
              "referencedDeclaration": 23181,
              "src": "427:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$23181",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23207,
            "mutability": "mutable",
            "name": "reward",
            "nameLocation": "458:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "448:16:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$23181",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 23206,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23205,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23181,
                "src": "448:9:13"
              },
              "referencedDeclaration": 23181,
              "src": "448:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$23181",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23210,
            "mutability": "mutable",
            "name": "gauge",
            "nameLocation": "480:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "470:15:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockGauge_$23199",
              "typeString": "contract MockGauge"
            },
            "typeName": {
              "id": 23209,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23208,
                "name": "MockGauge",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23199,
                "src": "470:9:13"
              },
              "referencedDeclaration": 23199,
              "src": "470:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockGauge_$23199",
                "typeString": "contract MockGauge"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23212,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "500:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "492:13:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23211,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "492:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23214,
            "mutability": "mutable",
            "name": "aliceKey",
            "nameLocation": "519:8:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "511:16:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23213,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "511:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23216,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "542:3:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "534:11:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23215,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "534:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23218,
            "mutability": "mutable",
            "name": "bobKey",
            "nameLocation": "559:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "551:14:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23217,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "551:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23300,
              "nodeType": "Block",
              "src": "596:386:13",
              "statements": [
                {
                  "expression": {
                    "id": 23227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 23221,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23212,
                          "src": "607:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 23222,
                          "name": "aliceKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23214,
                          "src": "614:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 23223,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "606:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "416c696365",
                          "id": 23225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "641:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                            "typeString": "literal_string \"Alice\""
                          },
                          "value": "Alice"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                            "typeString": "literal_string \"Alice\""
                          }
                        ],
                        "id": 23224,
                        "name": "makeAddrAndKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2339,
                        "src": "626:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (string memory) returns (address,uint256)"
                        }
                      },
                      "id": 23226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "626:23:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "606:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23228,
                  "nodeType": "ExpressionStatement",
                  "src": "606:43:13"
                },
                {
                  "expression": {
                    "id": 23235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 23229,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23216,
                          "src": "660:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 23230,
                          "name": "bobKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23218,
                          "src": "665:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 23231,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "659:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "426f62",
                          "id": 23233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "690:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                            "typeString": "literal_string \"Bob\""
                          },
                          "value": "Bob"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                            "typeString": "literal_string \"Bob\""
                          }
                        ],
                        "id": 23232,
                        "name": "makeAddrAndKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2339,
                        "src": "675:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (string memory) returns (address,uint256)"
                        }
                      },
                      "id": 23234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "675:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "659:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23236,
                  "nodeType": "ExpressionStatement",
                  "src": "659:37:13"
                },
                {
                  "expression": {
                    "id": 23242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23237,
                      "name": "asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23204,
                      "src": "707:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$23181",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "715:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$23181_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 23239,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23238,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23181,
                            "src": "719:9:13"
                          },
                          "referencedDeclaration": 23181,
                          "src": "719:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$23181",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 23241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "715:15:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$23181",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "707:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$23181",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 23243,
                  "nodeType": "ExpressionStatement",
                  "src": "707:23:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23249,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23204,
                            "src": "757:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$23181",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$23181",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 23248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "749:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23247,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "749:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "749:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6173736574",
                        "id": 23251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "765:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bd4060688a1800ae986e4840aebc924bb40b5bf44de4583df2257220b54b77c",
                          "typeString": "literal_string \"asset\""
                        },
                        "value": "asset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bd4060688a1800ae986e4840aebc924bb40b5bf44de4583df2257220b54b77c",
                          "typeString": "literal_string \"asset\""
                        }
                      ],
                      "expression": {
                        "id": 23244,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "740:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5154,
                      "src": "740:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 23252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "740:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23253,
                  "nodeType": "ExpressionStatement",
                  "src": "740:33:13"
                },
                {
                  "expression": {
                    "id": 23259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23254,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23207,
                      "src": "784:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$23181",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "793:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$23181_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 23256,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23255,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23181,
                            "src": "797:9:13"
                          },
                          "referencedDeclaration": 23181,
                          "src": "797:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$23181",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 23258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "793:15:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$23181",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "784:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$23181",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 23260,
                  "nodeType": "ExpressionStatement",
                  "src": "784:24:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23266,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23207,
                            "src": "835:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$23181",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$23181",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 23265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "827:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "827:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "827:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "726577617264",
                        "id": 23268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "844:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594d34f771ec633c2f562d96c03f9299763555317b87ad49b1aa8c08079dde0e",
                          "typeString": "literal_string \"reward\""
                        },
                        "value": "reward"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594d34f771ec633c2f562d96c03f9299763555317b87ad49b1aa8c08079dde0e",
                          "typeString": "literal_string \"reward\""
                        }
                      ],
                      "expression": {
                        "id": 23261,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "818:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5154,
                      "src": "818:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 23269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23270,
                  "nodeType": "ExpressionStatement",
                  "src": "818:35:13"
                },
                {
                  "expression": {
                    "id": 23288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23271,
                      "name": "gauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23210,
                      "src": "864:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockGauge_$23199",
                        "typeString": "contract MockGauge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 23278,
                                  "name": "asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23204,
                                  "src": "900:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$23181",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$23181",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 23277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "892:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 23276,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "892:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 23279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "892:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 23275,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22460,
                            "src": "886:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$22460_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 23280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "886:21:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$22460",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 23284,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23207,
                                  "src": "923:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$23181",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$23181",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 23283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "915:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 23282,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "915:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 23285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "915:15:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 23281,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22460,
                            "src": "909:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$22460_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 23286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "909:22:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$22460",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$22460",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$22460",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 23274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "872:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$22460_$_t_contract$_ERC20_$22460_$returns$_t_contract$_MockGauge_$23199_$",
                          "typeString": "function (contract ERC20,contract ERC20) returns (contract MockGauge)"
                        },
                        "typeName": {
                          "id": 23273,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23272,
                            "name": "MockGauge",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23199,
                            "src": "876:9:13"
                          },
                          "referencedDeclaration": 23199,
                          "src": "876:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGauge_$23199",
                            "typeString": "contract MockGauge"
                          }
                        }
                      },
                      "id": 23287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "872:60:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockGauge_$23199",
                        "typeString": "contract MockGauge"
                      }
                    },
                    "src": "864:68:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockGauge_$23199",
                      "typeString": "contract MockGauge"
                    }
                  },
                  "id": 23289,
                  "nodeType": "ExpressionStatement",
                  "src": "864:68:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23295,
                            "name": "gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23210,
                            "src": "959:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          ],
                          "id": 23294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "951:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "951:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "951:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6761756765",
                        "id": 23297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "967:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e32ea3b39a93c54669fff181847f2cca10e4790d3369ee82147e94f5566aa502",
                          "typeString": "literal_string \"gauge\""
                        },
                        "value": "gauge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e32ea3b39a93c54669fff181847f2cca10e4790d3369ee82147e94f5566aa502",
                          "typeString": "literal_string \"gauge\""
                        }
                      ],
                      "expression": {
                        "id": 23290,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "942:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5154,
                      "src": "942:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 23298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23299,
                  "nodeType": "ExpressionStatement",
                  "src": "942:33:13"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 23301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "581:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:2:13"
            },
            "returnParameters": {
              "id": 23220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:0:13"
            },
            "scope": 23369,
            "src": "572:410:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23367,
              "nodeType": "Block",
              "src": "1016:389:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23307,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23212,
                        "src": "1092:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3830",
                        "id": 23308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1099:8:13",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        },
                        "value": "80"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 23304,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23204,
                        "src": "1081:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$23181",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 23306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23180,
                      "src": "1081:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 23309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1081:27:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23310,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:27:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23314,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23212,
                        "src": "1128:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 23311,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1119:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5014,
                      "src": "1119:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 23315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1119:15:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23316,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23322,
                            "name": "gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23210,
                            "src": "1158:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          ],
                          "id": 23321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1150:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23320,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1150:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1150:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3830",
                        "id": 23324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1166:8:13",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        },
                        "value": "80"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 23317,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23204,
                        "src": "1136:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$23181",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 23319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22177,
                      "src": "1136:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 23325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23326,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:39:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23330,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23212,
                        "src": "1194:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 23327,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1185:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5014,
                      "src": "1185:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 23331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1185:15:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23332,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3830",
                        "id": 23336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1216:8:13",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        },
                        "value": "80"
                      },
                      {
                        "id": 23337,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23212,
                        "src": "1226:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 23333,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23210,
                        "src": "1202:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGauge_$23199",
                          "typeString": "contract MockGauge"
                        }
                      },
                      "id": 23335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22937,
                      "src": "1202:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 23338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1202:30:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23339,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313039",
                        "id": 23343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1251:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_109_by_1",
                          "typeString": "int_const 109"
                        },
                        "value": "109"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_109_by_1",
                          "typeString": "int_const 109"
                        }
                      ],
                      "expression": {
                        "id": 23340,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1243:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4808,
                      "src": "1243:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 23344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:12:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23345,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:12:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 23346,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23210,
                        "src": "1257:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGauge_$23199",
                          "typeString": "contract MockGauge"
                        }
                      },
                      "id": 23348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22797,
                      "src": "1257:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 23349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23350,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:18:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23354,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23212,
                            "src": "1325:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 23352,
                            "name": "gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23210,
                            "src": "1303:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          },
                          "id": 23353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardCreditsOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22713,
                          "src": "1303:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 23355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1303:28:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 23356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1333:8:13",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 23351,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1294:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:48:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23358,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:48:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23362,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23212,
                            "src": "1381:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 23360,
                            "name": "gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23210,
                            "src": "1361:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          },
                          "id": 23361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pendingReward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23073,
                          "src": "1361:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 23363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1361:26:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 23364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1389:8:13",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 23359,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1352:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1352:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23366,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:46:13"
                }
              ]
            },
            "functionSelector": "f4781f83",
            "id": 23368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBasic",
            "nameLocation": "997:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1006:2:13"
            },
            "returnParameters": {
              "id": 23303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:0:13"
            },
            "scope": 23369,
            "src": "988:417:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 23370,
        "src": "382:2673:13",
        "usedErrors": []
      }
    ],
    "src": "39:3017:13"
  }
}