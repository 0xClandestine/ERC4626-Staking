{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "reward",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Update",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accRewardsPerShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "convertToAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "convertToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRewardTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "maxWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "pendingReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "previewRedeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "name": "previewWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reward",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardCreditsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardDebtOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsPerSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updatePool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardsPerShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "assets",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x610100604052426009553480156200001657600080fd5b5060405162001b9838038062001b988339810160408190526200003991620002c2565b8181670de0b6b3a76400008260405180602001604052806000815250604051806020016040528060008152508181846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cc9190620002fa565b8251620000e1906000906020860190620001ff565b508151620000f7906001906020850190620001ff565b5060ff81166080524660a0526200010d62000163565b60c0525050506001600160a01b0392831660e052505083811690831614156200013557600080fd5b600680546001600160a01b0319166001600160a01b0393909316929092179091556008555062000407915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405162000197919062000363565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8280546200020d9062000326565b90600052602060002090601f0160209004810192826200023157600085556200027c565b82601f106200024c57805160ff19168380011785556200027c565b828001600101855582156200027c579182015b828111156200027c5782518255916020019190600101906200025f565b506200028a9291506200028e565b5090565b5b808211156200028a57600081556001016200028f565b80516001600160a01b0381168114620002bd57600080fd5b919050565b60008060408385031215620002d657600080fd5b620002e183620002a5565b9150620002f160208401620002a5565b90509250929050565b6000602082840312156200030d57600080fd5b815160ff811681146200031f57600080fd5b9392505050565b600181811c908216806200033b57607f821691505b602082108114156200035d57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200038057607f831692505b6020808410821415620003a157634e487b7160e01b86526022600452602486fd5b818015620003b85760018114620003ca57620003f9565b60ff19861689528489019650620003f9565b60008a81526020902060005b86811015620003f15781548b820152908501908301620003d6565b505084890196505b509498975050505050505050565b60805160a05160c05160e051611734620004646000396000818161030e015281816107a901528181610a5c01528181610d4501528181610f4c0152611251015260006106e1015260006106ac015260006102cd01526117346000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80639231cf7411610125578063ce96cb77116100ad578063e3161ddd1161007c578063e3161ddd14610487578063eacdaabc1461048f578063ef8b30f71461024d578063f40f0f5214610498578063fb3cee26146104ab57600080fd5b8063ce96cb771461041e578063d505accf14610447578063d905777e1461041e578063dd62ed3e1461045c57600080fd5b8063b3d7f6b9116100f4578063b3d7f6b91461024d578063b460af94146103f8578063ba0876521461040b578063c63d75b614610330578063c6e6f5921461024d57600080fd5b80639231cf74146103c157806394bf804d146103ca57806395d89b41146103dd578063a9059cbb146103e557600080fd5b80633644e515116101a85780634cdad506116101775780634cdad5061461024d5780636e553f651461036557806370a08231146103785780637cbaccd5146103985780637ecebe00146103a157600080fd5b80633644e5151461030157806338d52e0f14610309578063402d267d146103305780634bb2be741461034557600080fd5b80630a28a477116101ef5780630a28a4771461024d57806318160ddd14610281578063228cb7331461028a57806323b872dd146102b5578063313ce567146102c857600080fd5b806301e1d1141461022157806306fdde031461023857806307a2d13a1461024d578063095ea7b31461025e575b600080fd5b6002545b6040519081526020015b60405180910390f35b6102406104cb565b60405161022f9190611358565b61022561025b3660046113ad565b90565b61027161026c3660046113e2565b610559565b604051901515815260200161022f565b61022560025481565b60065461029d906001600160a01b031681565b6040516001600160a01b03909116815260200161022f565b6102716102c336600461140c565b6105c6565b6102ef7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161022f565b6102256106a8565b61029d7f000000000000000000000000000000000000000000000000000000000000000081565b61022561033e366004611448565b5060001990565b610225610353366004611448565b600a6020526000908152604090205481565b610225610373366004611463565b610703565b610225610386366004611448565b60036020526000908152604090205481565b61022560075481565b6102256103af366004611448565b60056020526000908152604090205481565b61022560095481565b6102256103d8366004611463565b6107a3565b61024061082f565b6102716103f33660046113e2565b61083c565b61022561040636600461148f565b6108a2565b61022561041936600461148f565b610948565b61022561042c366004611448565b6001600160a01b031660009081526003602052604090205490565b61045a6104553660046114cb565b610a83565b005b61022561046a36600461153e565b600460209081526000928352604080842090915290825290205481565b610225610cc7565b61022560085481565b6102256104a6366004611448565b610d27565b6102256104b9366004611448565b600b6020526000908152604090205481565b600080546104d890611568565b80601f016020809104026020016040519081016040528092919081815260200182805461050490611568565b80156105515780601f1061052657610100808354040283529160200191610551565b820191906000526020600020905b81548152906001019060200180831161053457829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105b49086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610622576105fd83826115b9565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061064a9084906115b9565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206116df833981519152906106939087815260200190565b60405180910390a360019150505b9392505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146106de576106d9610e69565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b60008061070e610cc7565b3360009081526003602052604090205490915061072b8585610f03565b9250801561076b57336000908152600a6020526040812054610753838564e8d4a51000610fc1565b61075d91906115b9565b90506107693382610fe0565b505b61077d8582018364e8d4a51000610fc1565b336000818152600a602052604090209190915561079b908587611011565b505092915050565b816107d97f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633308461109c565b6107e38284611126565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d791015b60405180910390a36105c0565b600180546104d890611568565b3360009081526003602052604081208054839190839061085d9084906115b9565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206116df833981519152906105b49086815260200190565b6000806108ad610cc7565b6001600160a01b038416600090815260036020908152604080832054600a909252822054929350916108e5838564e8d4a51000610fc1565b6108ef91906115b9565b90506109038483038464e8d4a51000610fc1565b6001600160a01b0386166000908152600a60205260409020556109268582610fe0565b610931878787611180565b935061093e338789611011565b5050509392505050565b6000336001600160a01b038316146109b8576001600160a01b038216600090815260046020908152604080832033845290915290205460001981146109b65761099185826115b9565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b5082806109fa5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b60448201526064015b60405180910390fd5b610a048285611278565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106a16001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684836112da565b42841015610ad35760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064016109f1565b60006001610adf6106a8565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610beb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610c215750876001600160a01b0316816001600160a01b0316145b610c5e5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016109f1565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60006009544211610cd9575060075490565b60025480610ced5750504260095560075490565b8064e8d4a51000600854610d0191906115d0565b610d0b91906115ef565b600754610d189190611611565b60078190554260095592915050565b6007546040516370a0823160e01b81523060048201526000919082907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db89190611629565b905060095443118015610dca57508015155b15610e1657600060085460095442610de291906115b9565b610dec91906115d0565b905081610dfe64e8d4a51000836115d0565b610e0891906115ef565b610e129084611611565b9250505b6001600160a01b0384166000908152600a602090815260408083205460039092529091205464e8d4a5100090610e4d9085906115d0565b610e5791906115ef565b610e6191906115b9565b949350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610e9b9190611642565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8180610f3f5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b60448201526064016109f1565b610f746001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308661109c565b610f7e8282611126565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d79101610822565b828202811515841585830485141716610fd957600080fd5b0492915050565b6001600160a01b0382166000908152600b602052604081208054839290611008908490611611565b90915550505050565b816001600160a01b0316836001600160a01b031614611097576001600160a01b0383166000908152600a6020908152604080832054600390925282205490919061105e9084908490610fc1565b905061106a81836115b9565b6001600160a01b038087166000908152600a60205260408082209390935590861681522080549091019055505b505050565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d116001600051141617169150508061111f5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016109f1565b5050505050565b80600260008282546111389190611611565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206116df83398151915291015b60405180910390a35050565b826001600160a01b03821633146111ef576001600160a01b038216600090815260046020908152604080832033845290915290205460001981146111ed576111c882826115b9565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b505b6111f98282611278565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46106a16001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684866112da565b6001600160a01b038216600090815260036020526040812080548392906112a09084906115b9565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206116df83398151915290602001611174565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806113525760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b60448201526064016109f1565b50505050565b600060208083528351808285015260005b8181101561138557858101830151858201604001528201611369565b81811115611397576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156113bf57600080fd5b5035919050565b80356001600160a01b03811681146113dd57600080fd5b919050565b600080604083850312156113f557600080fd5b6113fe836113c6565b946020939093013593505050565b60008060006060848603121561142157600080fd5b61142a846113c6565b9250611438602085016113c6565b9150604084013590509250925092565b60006020828403121561145a57600080fd5b6106a1826113c6565b6000806040838503121561147657600080fd5b82359150611486602084016113c6565b90509250929050565b6000806000606084860312156114a457600080fd5b833592506114b4602085016113c6565b91506114c2604085016113c6565b90509250925092565b600080600080600080600060e0888a0312156114e657600080fd5b6114ef886113c6565b96506114fd602089016113c6565b95506040880135945060608801359350608088013560ff8116811461152157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561155157600080fd5b61155a836113c6565b9150611486602084016113c6565b600181811c9082168061157c57607f821691505b6020821081141561159d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115cb576115cb6115a3565b500390565b60008160001904831182151516156115ea576115ea6115a3565b500290565b60008261160c57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611624576116246115a3565b500190565b60006020828403121561163b57600080fd5b5051919050565b600080835481600182811c91508083168061165e57607f831692505b602080841082141561167e57634e487b7160e01b86526022600452602486fd5b81801561169257600181146116a3576116d0565b60ff198616895284890196506116d0565b60008a81526020902060005b868110156116c85781548b8201529085019083016116af565b505084890196505b50949897505050505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212201627dbae9a1e7e5b03923643fdd55c61a3eccfa51c32101db70aad5ca2aa9b9664736f6c634300080a0033",
    "sourceMap": "259:121:13:-:0;;;1086:15:11;1054:47;;300:78:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;352:5;359:6;367:7;1562:6:11;1184:172:6;;;;;;;;;;;;;;;;;;;;;;;;1290:5;1297:7;1306:6;-1:-1:-1;;;;;1306:15:6;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2094:12:7;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;2116:16:7;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;2142:20:7;;;;;2192:13;2173:32;;2242:24;:22;:24::i;:::-;2215:51;;-1:-1:-1;;;;;;;;1335:14:6;;::::1;;::::0;-1:-1:-1;;1597:17:11;;::::1;::::0;;::::1;;;1589:26;;;::::0;::::1;;1626:6;:16:::0;;-1:-1:-1;;;;;;1626:16:11::1;-1:-1:-1::0;;;;;1626:16:11;;;::::1;::::0;;;::::1;::::0;;;1653::::1;:36:::0;-1:-1:-1;259:121:13;;-1:-1:-1;;259:121:13;5510:446:7;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;2705:25:15;;;;2746:18;;2739:34;;;;5833:14:7;2789:18:15;;;2782:34;5869:13:7;2832:18:15;;;2825:34;5912:4:7;2875:19:15;;;2868:61;2677:19;;5640:295:7;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;259:121:13:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;259:121:13;;;-1:-1:-1;259:121:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:184:15;100:13;;-1:-1:-1;;;;;142:31:15;;132:42;;122:70;;188:1;185;178:12;122:70;14:184;;;:::o;203:337::-;312:6;320;373:2;361:9;352:7;348:23;344:32;341:52;;;389:1;386;379:12;341:52;412:47;449:9;412:47;:::i;:::-;402:57;;478:56;530:2;519:9;515:18;478:56;:::i;:::-;468:66;;203:337;;;;;:::o;545:273::-;613:6;666:2;654:9;645:7;641:23;637:32;634:52;;;682:1;679;672:12;634:52;714:9;708:16;764:4;757:5;753:16;746:5;743:27;733:55;;784:1;781;774:12;733:55;807:5;545:273;-1:-1:-1;;;545:273:15:o;823:380::-;902:1;898:12;;;;945;;;966:61;;1020:4;1012:6;1008:17;998:27;;966:61;1073:2;1065:6;1062:14;1042:18;1039:38;1036:161;;;1119:10;1114:3;1110:20;1107:1;1100:31;1154:4;1151:1;1144:15;1182:4;1179:1;1172:15;1036:161;;823:380;;;:::o;1337:1104::-;1467:3;1496:1;1529:6;1523:13;1559:3;1581:1;1609:9;1605:2;1601:18;1591:28;;1669:2;1658:9;1654:18;1691;1681:61;;1735:4;1727:6;1723:17;1713:27;;1681:61;1761:2;1809;1801:6;1798:14;1778:18;1775:38;1772:165;;;-1:-1:-1;;;1836:33:15;;1892:4;1889:1;1882:15;1922:4;1843:3;1910:17;1772:165;1953:18;1980:104;;;;2098:1;2093:323;;;;1946:470;;1980:104;-1:-1:-1;;2013:24:15;;2001:37;;2058:16;;;;-1:-1:-1;1980:104:15;;2093:323;1284:1;1277:14;;;1321:4;1308:18;;2191:1;2205:165;2219:6;2216:1;2213:13;2205:165;;;2297:14;;2284:11;;;2277:35;2340:16;;;;2234:10;;2205:165;;;2209:3;;2399:6;2394:3;2390:16;2383:23;;1946:470;-1:-1:-1;2432:3:15;;1337:1104;-1:-1:-1;;;;;;;;1337:1104:15:o;2446:489::-;259:121:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "259:121:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8455:143:11;8552:11;;8455:143;;;160:25:15;;;148:2;133:18;8455:143:11;;;;;;;;1031:18:7;;;:::i;:::-;;;;;;;:::i;8770:156:11:-;;;;;;:::i;:::-;8885:6;8770:156;2461:211:7;;;;;;:::i;:::-;;:::i;:::-;;;1585:14:15;;1578:22;1560:41;;1548:2;1533:18;2461:211:7;1420:187:15;1304:26:7;;;;;;948:19:11;;;;;-1:-1:-1;;;;;948:19:11;;;;;;-1:-1:-1;;;;;1791:32:15;;;1773:51;;1761:2;1746:18;948:19:11;1612:218:15;3057:592:7;;;;;;:::i;:::-;;:::i;1083:31::-;;;;;;;;2340:4:15;2328:17;;;2310:36;;2298:2;2283:18;1083:31:7;2168:184:15;5327:177:7;;;:::i;1149:28:6:-;;;;;5696:108;;;;;;:::i;:::-;-1:-1:-1;;;5780:17:6;5696:108;1110:47:11;;;;;;:::i;:::-;;;;;;;;;;;;;;3585:869;;;;;;:::i;:::-;;:::i;1337:44:7:-;;;;;;:::i;:::-;;;;;;;;;;;;;;976:33:11;;;;;;1751:41:7;;;;;;:::i;:::-;;;;;;;;;;;;;;1054:47:11;;;;;;2072:467:6;;;;;;:::i;:::-;;:::i;1056:20:7:-;;;:::i;2678:373::-;;;;;;:::i;:::-;;:::i;5384:760:11:-;;;;;;:::i;:::-;;:::i;3230:713:6:-;;;;;;:::i;:::-;;:::i;5921:131::-;;;;;;:::i;:::-;-1:-1:-1;;;;;6028:16:6;5986:7;6028:16;;;:9;:16;;;;;;;5921:131;3838:1483:7;;;;;;:::i;:::-;;:::i;:::-;;1388:64;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1959:519:11;;;:::i;1016:31::-;;;;;;7736:509;;;;;;:::i;:::-;;:::i;1164:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1031:18:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2561:10;2535:4;2551:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2551:30:7;;;;;;;;;;:39;;;2606:37;2535:4;;2551:30;;2606:37;;;;2584:6;160:25:15;;148:2;133:18;;14:177;2606:37:7;;;;;;;;-1:-1:-1;2661:4:7;2461:211;;;;;:::o;3057:592::-;-1:-1:-1;;;;;3209:15:7;;3175:4;3209:15;;;:9;:15;;;;;;;;3225:10;3209:27;;;;;;;;-1:-1:-1;;3287:28:7;;3283:80;;3347:16;3357:6;3347:7;:16;:::i;:::-;-1:-1:-1;;;;;3317:15:7;;;;;;:9;:15;;;;;;;;3333:10;3317:27;;;;;;;:46;3283:80;-1:-1:-1;;;;;3374:15:7;;;;;;:9;:15;;;;;:25;;3393:6;;3374:15;:25;;3393:6;;3374:25;:::i;:::-;;;;-1:-1:-1;;;;;;;3545:13:7;;;;;;;:9;:13;;;;;;;:23;;;;;;3594:26;3545:13;;3594:26;;;-1:-1:-1;;;;;;;;;;;3594:26:7;;;3562:6;160:25:15;;148:2;133:18;;14:177;3594:26:7;;;;;;;;3638:4;3631:11;;;3057:592;;;;;;:::o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5403:94;;5327:177;:::o;5410:87::-;-1:-1:-1;5446:24:7;;5327:177::o;3585:869:11:-;3704:14;3731:23;3757:12;:10;:12::i;:::-;3808:10;3780:15;3798:21;;;:9;:21;;;;;;3731:38;;-1:-1:-1;3839:31:11;3853:6;3861:8;3839:13;:31::i;:::-;3830:40;-1:-1:-1;3973:11:11;;3969:202;;4094:10;4001:15;4081:24;;;:12;:24;;;;;;4019:59;4048:7;4057:15;1439:4;4019:28;:59::i;:::-;:86;;;;:::i;:::-;4001:104;;4120:39;4139:10;4151:7;4120:18;:39::i;:::-;3986:185;3969:202;4305:68;4344:6;4334:7;:16;4352:15;1439:4;4305:28;:68::i;:::-;4291:10;4278:24;;;;:12;:24;;;;;:95;;;;4397:49;;4429:8;4439:6;4397:19;:49::i;:::-;3720:734;;3585:869;;;;:::o;2072:467:6:-;2191:6;2341:57;:5;-1:-1:-1;;;;;2341:22:6;2364:10;2384:4;2191:6;2341:22;:57::i;:::-;2409:23;2415:8;2425:6;2409:5;:23::i;:::-;2448:45;;;5106:25:15;;;5162:2;5147:18;;5140:34;;;-1:-1:-1;;;;;2448:45:6;;;2456:10;;2448:45;;5079:18:15;2448:45:6;;;;;;;;2504:28;6443:73;1056:20:7;;;;;;;:::i;2678:373::-;2774:10;2748:4;2764:21;;;:9;:21;;;;;:31;;2789:6;;2764:21;2748:4;;2764:31;;2789:6;;2764:31;:::i;:::-;;;;-1:-1:-1;;;;;;;2941:13:7;;;;;;:9;:13;;;;;;;:23;;;;;;2990:32;2999:10;;-1:-1:-1;;;;;;;;;;;2990:32:7;;;2958:6;160:25:15;;148:2;133:18;;14:177;5384:760:11;5527:14;5554:23;5580:12;:10;:12::i;:::-;-1:-1:-1;;;;;5621:16:11;;5603:15;5621:16;;;:9;:16;;;;;;;;;5728:12;:19;;;;;;5554:38;;-1:-1:-1;5621:16:11;5666:59;5621:16;5554:38;1439:4;5666:28;:59::i;:::-;:81;;;;:::i;:::-;5648:99;;5883:68;5922:6;5912:7;:16;5930:15;1439:4;5883:28;:68::i;:::-;-1:-1:-1;;;;;5861:19:11;;;;;;:12;:19;;;;;:90;5983:34;5874:5;6009:7;5983:18;:34::i;:::-;6037:39;6052:6;6060:8;6070:5;6037:14;:39::i;:::-;6028:48;;6087:49;6107:10;6119:8;6129:6;6087:19;:49::i;:::-;5543:601;;;5384:760;;;;;:::o;3230:713:6:-;3349:14;3379:10;-1:-1:-1;;;;;3379:19:6;;;3375:228;;-1:-1:-1;;;;;3432:16:6;;3414:15;3432:16;;;:9;:16;;;;;;;;3449:10;3432:28;;;;;;;;-1:-1:-1;;3515:28:6;;3511:81;;3576:16;3586:6;3576:7;:16;:::i;:::-;-1:-1:-1;;;;;3545:16:6;;;;;;:9;:16;;;;;;;;3562:10;3545:28;;;;;;;:47;3511:81;3400:203;3375:228;-1:-1:-1;3719:6:6;;3687:61;;;;-1:-1:-1;;;3687:61:6;;5387:2:15;3687:61:6;;;5369:21:15;5426:2;5406:18;;;5399:30;-1:-1:-1;;;5445:18:15;;;5438:41;5496:18;;3687:61:6;;;;;;;;;3800:20;3806:5;3813:6;3800:5;:20::i;:::-;3836:53;;;5106:25:15;;;5162:2;5147:18;;5140:34;;;-1:-1:-1;;;;;3836:53:6;;;;;;;;3845:10;;3836:53;;5079:18:15;3836:53:6;;;;;;;3900:36;-1:-1:-1;;;;;3900:5:6;:18;3919:8;3929:6;3900:18;:36::i;3838:1483:7:-;4057:15;4045:8;:27;;4037:63;;;;-1:-1:-1;;;4037:63:7;;5727:2:15;4037:63:7;;;5709:21:15;5766:2;5746:18;;;5739:30;5805:25;5785:18;;;5778:53;5848:18;;4037:63:7;5525:347:15;4037:63:7;4265:24;4292:805;4428:18;:16;:18::i;:::-;-1:-1:-1;;;;;4873:13:7;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4511:449;;4555:165;4511:449;;;6164:25:15;6243:18;;;6236:43;;;;6315:15;;;6295:18;;;6288:43;6347:18;;;6340:34;;;6390:19;;;6383:35;;;;6434:19;;;;6427:35;;;4511:449:7;;;;;;;;;;6136:19:15;;;4511:449:7;;;4472:514;;;;;;;;-1:-1:-1;;;4350:658:7;;;6731:27:15;6774:11;;;6767:27;;;;6810:12;;;6803:28;;;;6847:12;;4350:658:7;;;-1:-1:-1;;4350:658:7;;;;;;;;;4319:707;;4350:658;4319:707;;;;4292:805;;;;;;;;;7097:25:15;7170:4;7158:17;;7138:18;;;7131:45;7192:18;;;7185:34;;;7235:18;;;7228:34;;;7069:19;;4292:805:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4292:805:7;;-1:-1:-1;;4292:805:7;;;-1:-1:-1;;;;;;;5120:30:7;;;;;;:59;;;5174:5;-1:-1:-1;;;;;5154:25:7;:16;-1:-1:-1;;;;;5154:25:7;;5120:59;5112:86;;;;-1:-1:-1;;;5112:86:7;;7475:2:15;5112:86:7;;;7457:21:15;7514:2;7494:18;;;7487:30;-1:-1:-1;;;7533:18:15;;;7526:44;7587:18;;5112:86:7;7273:338:15;5112:86:7;-1:-1:-1;;;;;5213:27:7;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5283:31;160:25:15;;;5213:36:7;;5283:31;;;;;133:18:15;5283:31:7;;;;;;;3838:1483;;;;;;;:::o;1959:519:11:-;1998:23;2067:14;;2048:15;:33;2044:64;;-1:-1:-1;2090:18:11;;;1959:519::o;2044:64::-;2138:11;;2174;2170:116;;-1:-1:-1;;2219:15:11;2202:14;:32;2256:18;;;1959:519::o;2170:116::-;2362:6;1439:4;2337:16;;:22;;;;:::i;:::-;:31;;;;:::i;:::-;2316:18;;:52;;;;:::i;:::-;2389:18;:36;;;2455:15;2438:14;:32;2298:70;1959:519;-1:-1:-1;;1959:519:11:o;7736:509::-;7845:18;;7891:30;;-1:-1:-1;;;7891:30:11;;7915:4;7891:30;;;1773:51:15;7797:7:11;;7845:18;7797:7;;7891:5;-1:-1:-1;;;;;7891:15:11;;;;1746:18:15;;7891:30:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7874:47;;7961:14;;7946:12;:29;:44;;;;-1:-1:-1;7979:11:11;;;7946:44;7942:214;;;8007:20;8067:16;;8049:14;;8031:15;:32;;;;:::i;:::-;8030:53;;;;:::i;:::-;8007:76;-1:-1:-1;8138:6:11;8117:18;1439:4;8007:76;8117:18;:::i;:::-;:27;;;;:::i;:::-;8098:46;;;;:::i;:::-;;;7992:164;7942:214;-1:-1:-1;;;;;8218:19:11;;;;;;:12;:19;;;;;;;;;8175:9;:16;;;;;;;1439:4;;8175:34;;8194:15;;8175:34;:::i;:::-;:40;;;;:::i;:::-;:62;;;;:::i;:::-;8168:69;7736:509;-1:-1:-1;;;;7736:509:11:o;5510:446:7:-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;10038:25:15;;;;10079:18;;10072:34;;;;5833:14:7;10122:18:15;;;10115:34;5869:13:7;10165:18:15;;;10158:34;5912:4:7;10208:19:15;;;10201:61;10010:19;;5640:295:7;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;1550:516:6:-;1759:6;;1726:62;;;;-1:-1:-1;;;1726:62:6;;10475:2:15;1726:62:6;;;10457:21:15;10514:2;10494:18;;;10487:30;-1:-1:-1;;;10533:18:15;;;10526:41;10584:18;;1726:62:6;10273:335:15;1726:62:6;1868:57;-1:-1:-1;;;;;1868:5:6;:22;1891:10;1911:4;1918:6;1868:22;:57::i;:::-;1936:23;1942:8;1952:6;1936:5;:23::i;:::-;1975:45;;;5106:25:15;;;5162:2;5147:18;;5140:34;;;-1:-1:-1;;;;;1975:45:6;;;1983:10;;1975:45;;5079:18:15;1975:45:6;4932:248:15;1507:535:8;1713:9;;;1844:19;;1837:27;1869:9;;1883;;;1880:16;;1866:31;1833:65;1823:121;;1928:1;1925;1918:12;1823:121;2007:19;;1507:535;-1:-1:-1;;1507:535:8:o;3452:125:11:-;-1:-1:-1;;;;;3538:20:11;;;;;;:15;:20;;;;;:31;;3562:7;;3538:20;:31;;3562:7;;3538:31;:::i;:::-;;;;-1:-1:-1;;;;3452:125:11:o;2543:792::-;2690:2;-1:-1:-1;;;;;2682:10:11;:4;-1:-1:-1;;;;;2682:10:11;;2678:650;;-1:-1:-1;;;;;2763:18:11;;2738:22;2763:18;;;:12;:18;;;;;;;;;2964:9;:15;;;;;;2763:18;;2738:22;2911:69;;2940:6;;2763:18;;2911:28;:69::i;:::-;2884:96;-1:-1:-1;3067:33:11;2884:96;3067:14;:33;:::i;:::-;-1:-1:-1;;;;;3046:18:11;;;;;;;:12;:18;;;;;;:54;;;;3265:16;;;;;;:36;;;;;;;-1:-1:-1;2678:650:11;2543:792;;;:::o;1285:1573:9:-;1423:12;1550:4;1544:11;-1:-1:-1;;;1673:17:9;1666:93;1806:4;1802:1;1783:17;1779:25;1772:39;1890:2;1885;1866:17;1862:26;1855:38;1970:6;1965:2;1946:17;1942:26;1935:42;2774:2;2771:1;2766:3;2747:17;2744:1;2737:5;2730;2725:52;2293:16;2286:24;2280:2;2262:16;2259:24;2255:1;2251;2245:8;2242:15;2238:46;2235:76;2035:756;2024:767;;;2819:7;2811:40;;;;-1:-1:-1;;;2811:40:9;;10815:2:15;2811:40:9;;;10797:21:15;10854:2;10834:18;;;10827:30;-1:-1:-1;;;10873:18:15;;;10866:50;10933:18;;2811:40:9;10613:344:15;2811:40:9;1413:1445;1285:1573;;;;:::o;6150:325:7:-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6387:13:7;;;;;;:9;:13;;;;;;;;:23;;;;;;6436:32;160:25:15;;;-1:-1:-1;;;;;;;;;;;6436:32:7;133:18:15;6436:32:7;;;;;;;;6150:325;;:::o;2545:679:6:-;2717:6;-1:-1:-1;;;;;2806:19:6;;:10;:19;2802:228;;-1:-1:-1;;;;;2859:16:6;;2841:15;2859:16;;;:9;:16;;;;;;;;2876:10;2859:28;;;;;;;;-1:-1:-1;;2942:28:6;;2938:81;;3003:16;3013:6;3003:7;:16;:::i;:::-;-1:-1:-1;;;;;2972:16:6;;;;;;:9;:16;;;;;;;;2989:10;2972:28;;;;;;;:47;2938:81;2827:203;2802:228;3081:20;3087:5;3094:6;3081:5;:20::i;:::-;3117:53;;;5106:25:15;;;5162:2;5147:18;;5140:34;;;-1:-1:-1;;;;;3117:53:6;;;;;;;;3126:10;;3117:53;;5079:18:15;3117:53:6;;;;;;;3181:36;-1:-1:-1;;;;;3181:5:6;:18;3200:8;3210:6;3181:18;:36::i;6481:328:7:-;-1:-1:-1;;;;;6553:15:7;;;;;;:9;:15;;;;;:25;;6572:6;;6553:15;:25;;6572:6;;6553:25;:::i;:::-;;;;-1:-1:-1;;6721:11:7;:21;;;;;;;6768:34;;160:25:15;;;-1:-1:-1;;;;;;;6768:34:7;;;-1:-1:-1;;;;;;;;;;;6768:34:7;148:2:15;133:18;6768:34:7;14:177:15;2864:1456:9;2976:12;3103:4;3097:11;-1:-1:-1;;;3226:17:9;3219:93;3359:2;3355:1;3336:17;3332:25;3325:37;3439:6;3434:2;3415:17;3411:26;3404:42;4241:2;4238:1;4234:2;4215:17;4212:1;4205:5;4198;4193:51;3762:16;3755:24;3749:2;3731:16;3728:24;3724:1;3720;3714:8;3711:15;3707:46;3704:76;3504:754;3493:765;;;4286:7;4278:35;;;;-1:-1:-1;;;4278:35:9;;11164:2:15;4278:35:9;;;11146:21:15;11203:2;11183:18;;;11176:30;-1:-1:-1;;;11222:18:15;;;11215:45;11277:18;;4278:35:9;10962:339:15;4278:35:9;2966:1354;2864:1456;;;:::o;196:597:15:-;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;634:6;631:1;628:13;625:91;;;704:1;699:2;690:6;679:9;675:22;671:31;664:42;625:91;-1:-1:-1;777:2:15;756:15;-1:-1:-1;;752:29:15;737:45;;;;784:2;733:54;;196:597;-1:-1:-1;;;196:597:15:o;798:180::-;857:6;910:2;898:9;889:7;885:23;881:32;878:52;;;926:1;923;916:12;878:52;-1:-1:-1;949:23:15;;798:180;-1:-1:-1;798:180:15:o;983:173::-;1051:20;;-1:-1:-1;;;;;1100:31:15;;1090:42;;1080:70;;1146:1;1143;1136:12;1080:70;983:173;;;:::o;1161:254::-;1229:6;1237;1290:2;1278:9;1269:7;1265:23;1261:32;1258:52;;;1306:1;1303;1296:12;1258:52;1329:29;1348:9;1329:29;:::i;:::-;1319:39;1405:2;1390:18;;;;1377:32;;-1:-1:-1;;;1161:254:15:o;1835:328::-;1912:6;1920;1928;1981:2;1969:9;1960:7;1956:23;1952:32;1949:52;;;1997:1;1994;1987:12;1949:52;2020:29;2039:9;2020:29;:::i;:::-;2010:39;;2068:38;2102:2;2091:9;2087:18;2068:38;:::i;:::-;2058:48;;2153:2;2142:9;2138:18;2125:32;2115:42;;1835:328;;;;;:::o;2539:186::-;2598:6;2651:2;2639:9;2630:7;2626:23;2622:32;2619:52;;;2667:1;2664;2657:12;2619:52;2690:29;2709:9;2690:29;:::i;2730:254::-;2798:6;2806;2859:2;2847:9;2838:7;2834:23;2830:32;2827:52;;;2875:1;2872;2865:12;2827:52;2911:9;2898:23;2888:33;;2940:38;2974:2;2963:9;2959:18;2940:38;:::i;:::-;2930:48;;2730:254;;;;;:::o;2989:328::-;3066:6;3074;3082;3135:2;3123:9;3114:7;3110:23;3106:32;3103:52;;;3151:1;3148;3141:12;3103:52;3187:9;3174:23;3164:33;;3216:38;3250:2;3239:9;3235:18;3216:38;:::i;:::-;3206:48;;3273:38;3307:2;3296:9;3292:18;3273:38;:::i;:::-;3263:48;;2989:328;;;;;:::o;3322:693::-;3433:6;3441;3449;3457;3465;3473;3481;3534:3;3522:9;3513:7;3509:23;3505:33;3502:53;;;3551:1;3548;3541:12;3502:53;3574:29;3593:9;3574:29;:::i;:::-;3564:39;;3622:38;3656:2;3645:9;3641:18;3622:38;:::i;:::-;3612:48;;3707:2;3696:9;3692:18;3679:32;3669:42;;3758:2;3747:9;3743:18;3730:32;3720:42;;3812:3;3801:9;3797:19;3784:33;3857:4;3850:5;3846:16;3839:5;3836:27;3826:55;;3877:1;3874;3867:12;3826:55;3322:693;;;;-1:-1:-1;3322:693:15;;;;3900:5;3952:3;3937:19;;3924:33;;-1:-1:-1;4004:3:15;3989:19;;;3976:33;;3322:693;-1:-1:-1;;3322:693:15:o;4020:260::-;4088:6;4096;4149:2;4137:9;4128:7;4124:23;4120:32;4117:52;;;4165:1;4162;4155:12;4117:52;4188:29;4207:9;4188:29;:::i;:::-;4178:39;;4236:38;4270:2;4259:9;4255:18;4236:38;:::i;4285:380::-;4364:1;4360:12;;;;4407;;;4428:61;;4482:4;4474:6;4470:17;4460:27;;4428:61;4535:2;4527:6;4524:14;4504:18;4501:38;4498:161;;;4581:10;4576:3;4572:20;4569:1;4562:31;4616:4;4613:1;4606:15;4644:4;4641:1;4634:15;4498:161;;4285:380;;;:::o;4670:127::-;4731:10;4726:3;4722:20;4719:1;4712:31;4762:4;4759:1;4752:15;4786:4;4783:1;4776:15;4802:125;4842:4;4870:1;4867;4864:8;4861:34;;;4875:18;;:::i;:::-;-1:-1:-1;4912:9:15;;4802:125::o;7616:168::-;7656:7;7722:1;7718;7714:6;7710:14;7707:1;7704:21;7699:1;7692:9;7685:17;7681:45;7678:71;;;7729:18;;:::i;:::-;-1:-1:-1;7769:9:15;;7616:168::o;7789:217::-;7829:1;7855;7845:132;;7899:10;7894:3;7890:20;7887:1;7880:31;7934:4;7931:1;7924:15;7962:4;7959:1;7952:15;7845:132;-1:-1:-1;7991:9:15;;7789:217::o;8011:128::-;8051:3;8082:1;8078:6;8075:1;8072:13;8069:39;;;8088:18;;:::i;:::-;-1:-1:-1;8124:9:15;;8011:128::o;8352:184::-;8422:6;8475:2;8463:9;8454:7;8450:23;8446:32;8443:52;;;8491:1;8488;8481:12;8443:52;-1:-1:-1;8514:16:15;;8352:184;-1:-1:-1;8352:184:15:o;8670:1104::-;8800:3;8829:1;8862:6;8856:13;8892:3;8914:1;8942:9;8938:2;8934:18;8924:28;;9002:2;8991:9;8987:18;9024;9014:61;;9068:4;9060:6;9056:17;9046:27;;9014:61;9094:2;9142;9134:6;9131:14;9111:18;9108:38;9105:165;;;-1:-1:-1;;;9169:33:15;;9225:4;9222:1;9215:15;9255:4;9176:3;9243:17;9105:165;9286:18;9313:104;;;;9431:1;9426:323;;;;9279:470;;9313:104;-1:-1:-1;;9346:24:15;;9334:37;;9391:16;;;;-1:-1:-1;9313:104:15;;9426:323;8617:1;8610:14;;;8654:4;8641:18;;9524:1;9538:165;9552:6;9549:1;9546:13;9538:165;;;9630:14;;9617:11;;;9610:35;9673:16;;;;9567:10;;9538:165;;;9542:3;;9732:6;9727:3;9723:16;9716:23;;9279:470;-1:-1:-1;9765:3:15;;8670:1104;-1:-1:-1;;;;;;;;8670:1104:15:o",
    "linkReferences": {},
    "immutableReferences": {
      "21594": [
        {
          "start": 782,
          "length": 32
        },
        {
          "start": 1961,
          "length": 32
        },
        {
          "start": 2652,
          "length": 32
        },
        {
          "start": 3397,
          "length": 32
        },
        {
          "start": 3916,
          "length": 32
        },
        {
          "start": 4689,
          "length": 32
        }
      ],
      "22097": [
        {
          "start": 717,
          "length": 32
        }
      ],
      "22111": [
        {
          "start": 1708,
          "length": 32
        }
      ],
      "22113": [
        {
          "start": 1761,
          "length": 32
        }
      ]
    }
  },
  "ast": {
    "absolutePath": "/mnt/c/Users/0xClandestine/Desktop/unsolidly/src/test/ERC4626Gauge.t.sol",
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC20": [
        22460
      ],
      "ERC4626": [
        22072
      ],
      "ERC4626Gauge": [
        23157
      ],
      "ERC4626GaugeTest": [
        23369
      ],
      "FixedPointMathLib": [
        22579
      ],
      "MockERC20": [
        23181
      ],
      "MockGauge": [
        23199
      ],
      "SafeTransferLib": [
        22664
      ],
      "Script": [
        2022
      ],
      "StdStorage": [
        3553
      ],
      "Test": [
        3455
      ],
      "Vm": [
        5423
      ],
      "console": [
        13487
      ],
      "console2": [
        21551
      ],
      "stdError": [
        3525
      ],
      "stdMath": [
        4794
      ],
      "stdStorage": [
        4655
      ]
    },
    "id": 23370,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23160,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:13"
      },
      {
        "absolutePath": "/mnt/c/Users/0xClandestine/Desktop/unsolidly/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "id": 23161,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23370,
        "sourceUnit": 4795,
        "src": "64:28:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/mnt/c/Users/0xClandestine/Desktop/unsolidly/src/ERC4626Gauge.sol",
        "file": "../ERC4626Gauge.sol",
        "id": 23162,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23370,
        "sourceUnit": 23158,
        "src": "93:29:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "",
                "id": 23164,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "152:2:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                  "typeString": "literal_string \"\""
                },
                "value": ""
              },
              {
                "hexValue": "",
                "id": 23165,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "156:2:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                  "typeString": "literal_string \"\""
                },
                "value": ""
              },
              {
                "hexValue": "3138",
                "id": 23166,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "160:2:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              }
            ],
            "baseName": {
              "id": 23163,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22460,
              "src": "146:5:13"
            },
            "id": 23167,
            "nodeType": "InheritanceSpecifier",
            "src": "146:17:13"
          }
        ],
        "canonicalName": "MockERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23181,
        "linearizedBaseContracts": [
          23181,
          22460
        ],
        "name": "MockERC20",
        "nameLocation": "133:9:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23179,
              "nodeType": "Block",
              "src": "220:35:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23175,
                        "name": "who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23169,
                        "src": "236:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23176,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23171,
                        "src": "241:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23174,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22431,
                      "src": "230:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "230:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23178,
                  "nodeType": "ExpressionStatement",
                  "src": "230:18:13"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 23180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "179:4:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23169,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "192:3:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 23180,
                  "src": "184:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "184:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23171,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "205:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 23180,
                  "src": "197:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "197:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "183:29:13"
            },
            "returnParameters": {
              "id": 23173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "220:0:13"
            },
            "scope": 23181,
            "src": "170:85:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 23370,
        "src": "124:133:13",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23182,
              "name": "ERC4626Gauge",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23157,
              "src": "281:12:13"
            },
            "id": 23183,
            "nodeType": "InheritanceSpecifier",
            "src": "281:12:13"
          }
        ],
        "canonicalName": "MockGauge",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23199,
        "linearizedBaseContracts": [
          23199,
          23157,
          22072,
          22460
        ],
        "name": "MockGauge",
        "nameLocation": "268:9:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23197,
              "nodeType": "Block",
              "src": "376:2:13",
              "statements": []
            },
            "id": 23198,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 23192,
                    "name": "asset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23186,
                    "src": "352:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22460",
                      "typeString": "contract ERC20"
                    }
                  },
                  {
                    "id": 23193,
                    "name": "reward",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23189,
                    "src": "359:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22460",
                      "typeString": "contract ERC20"
                    }
                  },
                  {
                    "hexValue": "31",
                    "id": 23194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "367:7:13",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  }
                ],
                "id": 23195,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 23191,
                  "name": "ERC4626Gauge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23157,
                  "src": "339:12:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "339:36:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23186,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "318:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 23198,
                  "src": "312:11:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$22460",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 23185,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23184,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22460,
                      "src": "312:5:13"
                    },
                    "referencedDeclaration": 22460,
                    "src": "312:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22460",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23189,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "331:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 23198,
                  "src": "325:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$22460",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 23188,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23187,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22460,
                      "src": "325:5:13"
                    },
                    "referencedDeclaration": 22460,
                    "src": "325:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$22460",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "311:27:13"
            },
            "returnParameters": {
              "id": 23196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:13"
            },
            "scope": 23199,
            "src": "300:78:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 23370,
        "src": "259:121:13",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23200,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3455,
              "src": "411:4:13"
            },
            "id": 23201,
            "nodeType": "InheritanceSpecifier",
            "src": "411:4:13"
          }
        ],
        "canonicalName": "ERC4626GaugeTest",
        "contractDependencies": [
          23181,
          23199
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23369,
        "linearizedBaseContracts": [
          23369,
          3455,
          2022,
          1786
        ],
        "name": "ERC4626GaugeTest",
        "nameLocation": "391:16:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 23204,
            "mutability": "mutable",
            "name": "asset",
            "nameLocation": "437:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "427:15:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$23181",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 23203,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23202,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23181,
                "src": "427:9:13"
              },
              "referencedDeclaration": 23181,
              "src": "427:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$23181",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23207,
            "mutability": "mutable",
            "name": "reward",
            "nameLocation": "458:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "448:16:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$23181",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 23206,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23205,
                "name": "MockERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23181,
                "src": "448:9:13"
              },
              "referencedDeclaration": 23181,
              "src": "448:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$23181",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23210,
            "mutability": "mutable",
            "name": "gauge",
            "nameLocation": "480:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "470:15:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockGauge_$23199",
              "typeString": "contract MockGauge"
            },
            "typeName": {
              "id": 23209,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23208,
                "name": "MockGauge",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23199,
                "src": "470:9:13"
              },
              "referencedDeclaration": 23199,
              "src": "470:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockGauge_$23199",
                "typeString": "contract MockGauge"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23212,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "500:5:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "492:13:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23211,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "492:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23214,
            "mutability": "mutable",
            "name": "aliceKey",
            "nameLocation": "519:8:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "511:16:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23213,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "511:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23216,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "542:3:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "534:11:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23215,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "534:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23218,
            "mutability": "mutable",
            "name": "bobKey",
            "nameLocation": "559:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 23369,
            "src": "551:14:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23217,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "551:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23300,
              "nodeType": "Block",
              "src": "596:386:13",
              "statements": [
                {
                  "expression": {
                    "id": 23227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 23221,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23212,
                          "src": "607:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 23222,
                          "name": "aliceKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23214,
                          "src": "614:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 23223,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "606:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "416c696365",
                          "id": 23225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "641:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                            "typeString": "literal_string \"Alice\""
                          },
                          "value": "Alice"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                            "typeString": "literal_string \"Alice\""
                          }
                        ],
                        "id": 23224,
                        "name": "makeAddrAndKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2339,
                        "src": "626:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (string memory) returns (address,uint256)"
                        }
                      },
                      "id": 23226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "626:23:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "606:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23228,
                  "nodeType": "ExpressionStatement",
                  "src": "606:43:13"
                },
                {
                  "expression": {
                    "id": 23235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 23229,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23216,
                          "src": "660:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 23230,
                          "name": "bobKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23218,
                          "src": "665:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 23231,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "659:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "426f62",
                          "id": 23233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "690:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                            "typeString": "literal_string \"Bob\""
                          },
                          "value": "Bob"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                            "typeString": "literal_string \"Bob\""
                          }
                        ],
                        "id": 23232,
                        "name": "makeAddrAndKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2339,
                        "src": "675:14:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (string memory) returns (address,uint256)"
                        }
                      },
                      "id": 23234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "675:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "659:37:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23236,
                  "nodeType": "ExpressionStatement",
                  "src": "659:37:13"
                },
                {
                  "expression": {
                    "id": 23242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23237,
                      "name": "asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23204,
                      "src": "707:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$23181",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "715:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$23181_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 23239,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23238,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23181,
                            "src": "719:9:13"
                          },
                          "referencedDeclaration": 23181,
                          "src": "719:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$23181",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 23241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "715:15:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$23181",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "707:23:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$23181",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 23243,
                  "nodeType": "ExpressionStatement",
                  "src": "707:23:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23249,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23204,
                            "src": "757:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$23181",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$23181",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 23248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "749:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23247,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "749:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "749:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6173736574",
                        "id": 23251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "765:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bd4060688a1800ae986e4840aebc924bb40b5bf44de4583df2257220b54b77c",
                          "typeString": "literal_string \"asset\""
                        },
                        "value": "asset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bd4060688a1800ae986e4840aebc924bb40b5bf44de4583df2257220b54b77c",
                          "typeString": "literal_string \"asset\""
                        }
                      ],
                      "expression": {
                        "id": 23244,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "740:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5154,
                      "src": "740:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 23252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "740:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23253,
                  "nodeType": "ExpressionStatement",
                  "src": "740:33:13"
                },
                {
                  "expression": {
                    "id": 23259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23254,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23207,
                      "src": "784:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$23181",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "793:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$23181_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 23256,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23255,
                            "name": "MockERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23181,
                            "src": "797:9:13"
                          },
                          "referencedDeclaration": 23181,
                          "src": "797:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$23181",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 23258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "793:15:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$23181",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "784:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$23181",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 23260,
                  "nodeType": "ExpressionStatement",
                  "src": "784:24:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23266,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23207,
                            "src": "835:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$23181",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$23181",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 23265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "827:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "827:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "827:15:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "726577617264",
                        "id": 23268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "844:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594d34f771ec633c2f562d96c03f9299763555317b87ad49b1aa8c08079dde0e",
                          "typeString": "literal_string \"reward\""
                        },
                        "value": "reward"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594d34f771ec633c2f562d96c03f9299763555317b87ad49b1aa8c08079dde0e",
                          "typeString": "literal_string \"reward\""
                        }
                      ],
                      "expression": {
                        "id": 23261,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "818:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5154,
                      "src": "818:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 23269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:35:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23270,
                  "nodeType": "ExpressionStatement",
                  "src": "818:35:13"
                },
                {
                  "expression": {
                    "id": 23288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23271,
                      "name": "gauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23210,
                      "src": "864:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockGauge_$23199",
                        "typeString": "contract MockGauge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 23278,
                                  "name": "asset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23204,
                                  "src": "900:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$23181",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$23181",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 23277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "892:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 23276,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "892:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 23279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "892:14:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 23275,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22460,
                            "src": "886:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$22460_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 23280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "886:21:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$22460",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 23284,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23207,
                                  "src": "923:6:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$23181",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$23181",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 23283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "915:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 23282,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "915:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 23285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "915:15:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 23281,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22460,
                            "src": "909:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$22460_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 23286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "909:22:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$22460",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$22460",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20_$22460",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 23274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "872:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$22460_$_t_contract$_ERC20_$22460_$returns$_t_contract$_MockGauge_$23199_$",
                          "typeString": "function (contract ERC20,contract ERC20) returns (contract MockGauge)"
                        },
                        "typeName": {
                          "id": 23273,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 23272,
                            "name": "MockGauge",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 23199,
                            "src": "876:9:13"
                          },
                          "referencedDeclaration": 23199,
                          "src": "876:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockGauge_$23199",
                            "typeString": "contract MockGauge"
                          }
                        }
                      },
                      "id": 23287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "872:60:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockGauge_$23199",
                        "typeString": "contract MockGauge"
                      }
                    },
                    "src": "864:68:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockGauge_$23199",
                      "typeString": "contract MockGauge"
                    }
                  },
                  "id": 23289,
                  "nodeType": "ExpressionStatement",
                  "src": "864:68:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23295,
                            "name": "gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23210,
                            "src": "959:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          ],
                          "id": 23294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "951:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "951:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "951:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6761756765",
                        "id": 23297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "967:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e32ea3b39a93c54669fff181847f2cca10e4790d3369ee82147e94f5566aa502",
                          "typeString": "literal_string \"gauge\""
                        },
                        "value": "gauge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e32ea3b39a93c54669fff181847f2cca10e4790d3369ee82147e94f5566aa502",
                          "typeString": "literal_string \"gauge\""
                        }
                      ],
                      "expression": {
                        "id": 23290,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "942:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5154,
                      "src": "942:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 23298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:33:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23299,
                  "nodeType": "ExpressionStatement",
                  "src": "942:33:13"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 23301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "581:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "586:2:13"
            },
            "returnParameters": {
              "id": 23220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:0:13"
            },
            "scope": 23369,
            "src": "572:410:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23367,
              "nodeType": "Block",
              "src": "1016:389:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23307,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23212,
                        "src": "1092:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3830",
                        "id": 23308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1099:8:13",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        },
                        "value": "80"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 23304,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23204,
                        "src": "1081:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$23181",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 23306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23180,
                      "src": "1081:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 23309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1081:27:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23310,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:27:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23314,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23212,
                        "src": "1128:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 23311,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1119:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5014,
                      "src": "1119:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 23315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1119:15:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23316,
                  "nodeType": "ExpressionStatement",
                  "src": "1119:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23322,
                            "name": "gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23210,
                            "src": "1158:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          ],
                          "id": 23321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1150:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23320,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1150:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1150:14:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3830",
                        "id": 23324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1166:8:13",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        },
                        "value": "80"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 23317,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23204,
                        "src": "1136:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$23181",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 23319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22177,
                      "src": "1136:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 23325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23326,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:39:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23330,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23212,
                        "src": "1194:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 23327,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1185:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5014,
                      "src": "1185:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 23331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1185:15:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23332,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3830",
                        "id": 23336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1216:8:13",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        },
                        "value": "80"
                      },
                      {
                        "id": 23337,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23212,
                        "src": "1226:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_80000000000000000000_by_1",
                          "typeString": "int_const 80000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 23333,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23210,
                        "src": "1202:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGauge_$23199",
                          "typeString": "contract MockGauge"
                        }
                      },
                      "id": 23335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22937,
                      "src": "1202:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256)"
                      }
                    },
                    "id": 23338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1202:30:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23339,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313039",
                        "id": 23343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1251:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_109_by_1",
                          "typeString": "int_const 109"
                        },
                        "value": "109"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_109_by_1",
                          "typeString": "int_const 109"
                        }
                      ],
                      "expression": {
                        "id": 23340,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1243:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$5423",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 23342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4808,
                      "src": "1243:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 23344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:12:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23345,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:12:13"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 23346,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23210,
                        "src": "1257:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockGauge_$23199",
                          "typeString": "contract MockGauge"
                        }
                      },
                      "id": 23348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22797,
                      "src": "1257:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 23349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:18:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23350,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:18:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23354,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23212,
                            "src": "1325:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 23352,
                            "name": "gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23210,
                            "src": "1303:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          },
                          "id": 23353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardCreditsOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22713,
                          "src": "1303:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 23355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1303:28:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 23356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1333:8:13",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 23351,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1294:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:48:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23358,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:48:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23362,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23212,
                            "src": "1381:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 23360,
                            "name": "gauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23210,
                            "src": "1361:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockGauge_$23199",
                              "typeString": "contract MockGauge"
                            }
                          },
                          "id": 23361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pendingReward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23073,
                          "src": "1361:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 23363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1361:26:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 23364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1389:8:13",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 23359,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2779,
                        2804,
                        2817,
                        2833,
                        2875,
                        2917,
                        2959,
                        2996,
                        3033,
                        3070,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1352:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 23365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1352:46:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23366,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:46:13"
                }
              ]
            },
            "functionSelector": "f4781f83",
            "id": 23368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBasic",
            "nameLocation": "997:9:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1006:2:13"
            },
            "returnParameters": {
              "id": 23303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1016:0:13"
            },
            "scope": 23369,
            "src": "988:417:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 23370,
        "src": "382:2673:13",
        "usedErrors": []
      }
    ],
    "src": "39:3017:13"
  }
}